# k0sctl fish shell completion

function __fish_k0sctl_no_subcommand --description 'Test if there has been any subcommand yet'
    for i in (commandline -opc)
        if contains -- $i version apply kubeconfig init reset backup config edit status completion help h help h
            return 1
        end
    end
    return 0
end

complete -c k0sctl -n '__fish_k0sctl_no_subcommand' -f -l debug -s d -d 'Enable debug logging'
complete -c k0sctl -n '__fish_k0sctl_no_subcommand' -f -l trace -d 'Enable trace logging'
complete -c k0sctl -n '__fish_k0sctl_no_subcommand' -f -l no-redact -d 'Do not hide sensitive information in the output'
complete -c k0sctl -n '__fish_k0sctl_no_subcommand' -f -l help -s h -d 'show help'
complete -c k0sctl -n '__fish_k0sctl_no_subcommand' -f -l help -s h -d 'show help'
complete -c k0sctl -n '__fish_seen_subcommand_from version' -f -l help -s h -d 'show help'
complete -r -c k0sctl -n '__fish_k0sctl_no_subcommand' -a 'version' -d 'Output k0sctl version'
complete -c k0sctl -n '__fish_seen_subcommand_from version' -f -l k0s -d 'Retrieve the latest k0s version number'
complete -c k0sctl -n '__fish_seen_subcommand_from version' -f -l k0sctl -d 'Retrieve the latest k0sctl version number'
complete -c k0sctl -n '__fish_seen_subcommand_from version' -f -l pre -d 'When used in conjunction with --k0s, a pre release is accepted as the latest version'
complete -c k0sctl -n '__fish_seen_subcommand_from apply' -f -l help -s h -d 'show help'
complete -r -c k0sctl -n '__fish_k0sctl_no_subcommand' -a 'apply' -d 'Apply a k0sctl configuration'
complete -c k0sctl -n '__fish_seen_subcommand_from apply' -l config -s c -r -d 'Path or glob to config yaml. Can be given multiple times. Use \'-\' to read from stdin.'
complete -c k0sctl -n '__fish_seen_subcommand_from apply' -f -l concurrency -r -d 'Maximum number of hosts to configure in parallel, set to 0 for unlimited'
complete -c k0sctl -n '__fish_seen_subcommand_from apply' -f -l concurrent-uploads -r -d 'Maximum number of files to upload in parallel, set to 0 for unlimited'
complete -c k0sctl -n '__fish_seen_subcommand_from apply' -f -l dry-run -d 'Do not alter cluster state, just print what would be done (EXPERIMENTAL)'
complete -c k0sctl -n '__fish_seen_subcommand_from apply' -f -l no-wait -d 'Do not wait for worker nodes to join'
complete -c k0sctl -n '__fish_seen_subcommand_from apply' -f -l no-drain -d 'Do not drain worker nodes when upgrading'
complete -c k0sctl -n '__fish_seen_subcommand_from apply' -l restore-from -r -d 'Path to cluster backup archive to restore the state from'
complete -c k0sctl -n '__fish_seen_subcommand_from apply' -l kubeconfig-out -r -d 'Write kubeconfig to given path after a successful apply'
complete -c k0sctl -n '__fish_seen_subcommand_from apply' -f -l kubeconfig-api-address -r -d 'Override the API address in the kubeconfig when kubeconfig-out is set'
complete -c k0sctl -n '__fish_seen_subcommand_from apply' -f -l kubeconfig-user -r -d 'Set kubernetes username'
complete -c k0sctl -n '__fish_seen_subcommand_from apply' -f -l kubeconfig-cluster -r -d 'Set kubernetes cluster name'
complete -c k0sctl -n '__fish_seen_subcommand_from apply' -f -l evict-taint -r -d 'Taint to be applied to nodes before draining and removed after uncordoning in the format of <key=value>:<effect> (default: from spec.options.evictTaint)'
complete -c k0sctl -n '__fish_seen_subcommand_from apply' -f -l force -d 'Attempt a forced operation in case of certain failures'
complete -c k0sctl -n '__fish_seen_subcommand_from apply' -f -l debug -s d -d 'Enable debug logging'
complete -c k0sctl -n '__fish_seen_subcommand_from apply' -f -l trace -d 'Enable trace logging'
complete -c k0sctl -n '__fish_seen_subcommand_from apply' -f -l no-redact -d 'Do not hide sensitive information in the output'
complete -c k0sctl -n '__fish_seen_subcommand_from apply' -f -l timeout -r -d 'Timeout for the whole operation. Set to 0 to wait forever. Can be used to allow more time for the operation to finish before giving up.'
complete -c k0sctl -n '__fish_seen_subcommand_from kubeconfig' -f -l help -s h -d 'show help'
complete -r -c k0sctl -n '__fish_k0sctl_no_subcommand' -a 'kubeconfig' -d 'Output the admin kubeconfig of the cluster'
complete -c k0sctl -n '__fish_seen_subcommand_from kubeconfig' -f -l address -r
complete -c k0sctl -n '__fish_seen_subcommand_from kubeconfig' -f -l user -s u -r -d 'Set kubernetes cluster username'
complete -c k0sctl -n '__fish_seen_subcommand_from kubeconfig' -f -l cluster -s n -r -d 'Set kubernetes cluster name'
complete -c k0sctl -n '__fish_seen_subcommand_from kubeconfig' -l config -s c -r -d 'Path or glob to config yaml. Can be given multiple times. Use \'-\' to read from stdin.'
complete -c k0sctl -n '__fish_seen_subcommand_from kubeconfig' -f -l dry-run -d 'Do not alter cluster state, just print what would be done (EXPERIMENTAL)'
complete -c k0sctl -n '__fish_seen_subcommand_from kubeconfig' -f -l force -d 'Attempt a forced operation in case of certain failures'
complete -c k0sctl -n '__fish_seen_subcommand_from kubeconfig' -f -l debug -s d -d 'Enable debug logging'
complete -c k0sctl -n '__fish_seen_subcommand_from kubeconfig' -f -l trace -d 'Enable trace logging'
complete -c k0sctl -n '__fish_seen_subcommand_from kubeconfig' -f -l no-redact -d 'Do not hide sensitive information in the output'
complete -c k0sctl -n '__fish_seen_subcommand_from kubeconfig' -f -l timeout -r -d 'Timeout for the whole operation. Set to 0 to wait forever. Can be used to allow more time for the operation to finish before giving up.'
complete -c k0sctl -n '__fish_seen_subcommand_from init' -f -l help -s h -d 'show help'
complete -r -c k0sctl -n '__fish_k0sctl_no_subcommand' -a 'init' -d 'Create a configuration template'
complete -c k0sctl -n '__fish_seen_subcommand_from init' -f -l k0s -d 'Include a skeleton k0s config section'
complete -c k0sctl -n '__fish_seen_subcommand_from init' -f -l cluster-name -s n -r -d 'Cluster name'
complete -c k0sctl -n '__fish_seen_subcommand_from init' -f -l controller-count -s C -r -d 'The number of controllers to create when addresses are given'
complete -c k0sctl -n '__fish_seen_subcommand_from init' -f -l user -s u -r -d 'Host user when addresses given'
complete -c k0sctl -n '__fish_seen_subcommand_from init' -f -l key-path -s i -r -d 'Host key path when addresses given'
complete -c k0sctl -n '__fish_seen_subcommand_from reset' -f -l help -s h -d 'show help'
complete -r -c k0sctl -n '__fish_k0sctl_no_subcommand' -a 'reset' -d 'Remove traces of k0s from all of the hosts'
complete -c k0sctl -n '__fish_seen_subcommand_from reset' -l config -s c -r -d 'Path or glob to config yaml. Can be given multiple times. Use \'-\' to read from stdin.'
complete -c k0sctl -n '__fish_seen_subcommand_from reset' -f -l concurrency -r -d 'Maximum number of hosts to configure in parallel, set to 0 for unlimited'
complete -c k0sctl -n '__fish_seen_subcommand_from reset' -f -l dry-run -d 'Do not alter cluster state, just print what would be done (EXPERIMENTAL)'
complete -c k0sctl -n '__fish_seen_subcommand_from reset' -f -l force -d 'Attempt a forced operation in case of certain failures'
complete -c k0sctl -n '__fish_seen_subcommand_from reset' -f -l debug -s d -d 'Enable debug logging'
complete -c k0sctl -n '__fish_seen_subcommand_from reset' -f -l trace -d 'Enable trace logging'
complete -c k0sctl -n '__fish_seen_subcommand_from reset' -f -l no-redact -d 'Do not hide sensitive information in the output'
complete -c k0sctl -n '__fish_seen_subcommand_from reset' -f -l timeout -r -d 'Timeout for the whole operation. Set to 0 to wait forever. Can be used to allow more time for the operation to finish before giving up.'
complete -c k0sctl -n '__fish_seen_subcommand_from backup' -f -l help -s h -d 'show help'
complete -r -c k0sctl -n '__fish_k0sctl_no_subcommand' -a 'backup' -d 'Take backup of existing clusters state'
complete -c k0sctl -n '__fish_seen_subcommand_from backup' -f -l output -s o -r -d 'Output path for the backup. Default is k0s_backup_<timestamp>.tar.gz in current directory'
complete -c k0sctl -n '__fish_seen_subcommand_from backup' -l config -s c -r -d 'Path or glob to config yaml. Can be given multiple times. Use \'-\' to read from stdin.'
complete -c k0sctl -n '__fish_seen_subcommand_from backup' -f -l dry-run -d 'Do not alter cluster state, just print what would be done (EXPERIMENTAL)'
complete -c k0sctl -n '__fish_seen_subcommand_from backup' -f -l concurrency -r -d 'Maximum number of hosts to configure in parallel, set to 0 for unlimited'
complete -c k0sctl -n '__fish_seen_subcommand_from backup' -f -l force -d 'Attempt a forced operation in case of certain failures'
complete -c k0sctl -n '__fish_seen_subcommand_from backup' -f -l debug -s d -d 'Enable debug logging'
complete -c k0sctl -n '__fish_seen_subcommand_from backup' -f -l trace -d 'Enable trace logging'
complete -c k0sctl -n '__fish_seen_subcommand_from backup' -f -l no-redact -d 'Do not hide sensitive information in the output'
complete -c k0sctl -n '__fish_seen_subcommand_from backup' -f -l timeout -r -d 'Timeout for the whole operation. Set to 0 to wait forever. Can be used to allow more time for the operation to finish before giving up.'
complete -c k0sctl -n '__fish_seen_subcommand_from config' -f -l help -s h -d 'show help'
complete -r -c k0sctl -n '__fish_k0sctl_no_subcommand' -a 'config' -d 'Configuration related sub-commands'
complete -c k0sctl -n '__fish_seen_subcommand_from edit' -f -l help -s h -d 'show help'
complete -r -c k0sctl -n '__fish_seen_subcommand_from config' -a 'edit' -d 'Edit k0s dynamic config in SHELL\'s default editor'
complete -c k0sctl -n '__fish_seen_subcommand_from edit' -l config -s c -r -d 'Path or glob to config yaml. Can be given multiple times. Use \'-\' to read from stdin.'
complete -c k0sctl -n '__fish_seen_subcommand_from edit' -f -l debug -s d -d 'Enable debug logging'
complete -c k0sctl -n '__fish_seen_subcommand_from edit' -f -l force -d 'Attempt a forced operation in case of certain failures'
complete -c k0sctl -n '__fish_seen_subcommand_from edit' -f -l trace -d 'Enable trace logging'
complete -c k0sctl -n '__fish_seen_subcommand_from edit' -f -l no-redact -d 'Do not hide sensitive information in the output'
complete -c k0sctl -n '__fish_seen_subcommand_from edit' -f -l timeout -r -d 'Timeout for the whole operation. Set to 0 to wait forever. Can be used to allow more time for the operation to finish before giving up.'
complete -c k0sctl -n '__fish_seen_subcommand_from status' -f -l help -s h -d 'show help'
complete -r -c k0sctl -n '__fish_seen_subcommand_from config' -a 'status' -d 'Show k0s dynamic config reconciliation events'
complete -c k0sctl -n '__fish_seen_subcommand_from status' -l config -s c -r -d 'Path or glob to config yaml. Can be given multiple times. Use \'-\' to read from stdin.'
complete -c k0sctl -n '__fish_seen_subcommand_from status' -f -l force -d 'Attempt a forced operation in case of certain failures'
complete -c k0sctl -n '__fish_seen_subcommand_from status' -f -l debug -s d -d 'Enable debug logging'
complete -c k0sctl -n '__fish_seen_subcommand_from status' -f -l trace -d 'Enable trace logging'
complete -c k0sctl -n '__fish_seen_subcommand_from status' -f -l no-redact -d 'Do not hide sensitive information in the output'
complete -c k0sctl -n '__fish_seen_subcommand_from status' -f -l timeout -r -d 'Timeout for the whole operation. Set to 0 to wait forever. Can be used to allow more time for the operation to finish before giving up.'
complete -c k0sctl -n '__fish_seen_subcommand_from status' -f -l output -s o -r -d 'kubectl output formatting'
complete -c k0sctl -n '__fish_seen_subcommand_from completion' -f -l help -s h -d 'show help'
complete -r -c k0sctl -n '__fish_k0sctl_no_subcommand' -a 'completion'
complete -c k0sctl -n '__fish_seen_subcommand_from completion' -f -l shell -s s -r -d 'Shell to generate the script for'
complete -c k0sctl -n '__fish_seen_subcommand_from completion' -f -l help -s h -d 'show help'
complete -c k0sctl -n '__fish_seen_subcommand_from help h' -f -l help -s h -d 'show help'
complete -r -c k0sctl -n '__fish_seen_subcommand_from completion' -a 'help h' -d 'Shows a list of commands or help for one command'
complete -c k0sctl -n '__fish_seen_subcommand_from help h' -f -l help -s h -d 'show help'
complete -r -c k0sctl -n '__fish_k0sctl_no_subcommand' -a 'help h' -d 'Shows a list of commands or help for one command'
